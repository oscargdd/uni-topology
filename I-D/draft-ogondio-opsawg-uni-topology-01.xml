<?xml version="1.0" encoding="US-ASCII"?>
<!-- This template is for creating an Internet Draft using xml2rfc,
     which is available here: http://xml.resource.org. -->
<!DOCTYPE rfc SYSTEM "rfc2629.dtd" [
<!-- One method to get references from the online citation libraries.
     There has to be one entity for each item to be referenced.
     An alternate method (rfc include) is described in the references. -->
<!ENTITY RFC2119 SYSTEM "http://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.2119.xml">
<!ENTITY RFC3688 SYSTEM "http://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.3688.xml">
<!ENTITY RFC6020 SYSTEM "http://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.6020.xml">
<!ENTITY RFC6241 SYSTEM "http://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.6241.xml">
<!ENTITY RFC6242 SYSTEM "http://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.6242.xml">
<!ENTITY RFC7950 SYSTEM "http://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.7950.xml">
<!ENTITY RFC7149 SYSTEM "http://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.7149.xml">
<!ENTITY RFC7426 SYSTEM "http://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.7426.xml">
<!ENTITY RFC8040 SYSTEM "http://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.8040.xml">
<!ENTITY RFC8299 SYSTEM "http://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.8299.xml">
<!ENTITY RFC8309 SYSTEM "http://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.8309.xml">
<!ENTITY RFC8340 SYSTEM "http://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.8340.xml">
<!ENTITY RFC8341 SYSTEM "http://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.8341.xml">
<!ENTITY RFC8342 SYSTEM "http://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.8342.xml">
<!ENTITY RFC8343 SYSTEM "http://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.8343.xml">
<!ENTITY RFC8345 SYSTEM "http://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.8345.xml">
<!ENTITY RFC8174 SYSTEM "http://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.8174.xml">
<!ENTITY RFC8446 SYSTEM "http://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.8446.xml">
<!ENTITY I-D.ietf-opsawg-l3sm-l3nm SYSTEM "http://xml2rfc.tools.ietf.org/public/rfc/bibxml3/reference.I-D.ietf-opsawg-l3sm-l3nm.xml">
]>
<?xml-stylesheet type='text/xsl' href='rfc2629.xslt' ?>
<!-- used by XSLT processors -->
<!-- For a complete list and description of processing instructions (PIs),
     please see http://xml.resource.org/authoring/README.html. -->
<!-- Below are generally applicable Processing Instructions (PIs) that most I-Ds might want to use.
     (Here they are set differently than their defaults in xml2rfc v1.32) -->
<?rfc strict="yes" ?>
<!-- give errors regarding ID-nits and DTD validation -->
<!-- control the table of contents (ToC) -->
<?rfc toc="yes"?>
<!-- generate a ToC -->
<?rfc tocdepth="4"?>
<!-- the number of levels of subsections in ToC. default: 3 -->
<!-- control references -->
<?rfc symrefs="yes"?>
<!-- use symbolic references tags, i.e, [RFC2119] instead of [1] -->
<?rfc sortrefs="yes" ?>
<!-- sort the reference entries alphabetically -->
<!-- control vertical white space
     (using these PIs as follows is recommended by the RFC Editor) -->
<?rfc compact="yes" ?>
<!-- do not start each main section on a new page -->
<?rfc subcompact="no" ?>
<!-- keep one blank line between list items -->
<!-- end of list of popular I-D processing instructions -->
<rfc category="std" docName="draft-ogondio-opsawg-uni-topology-01"
     ipr="trust200902">
  <!-- category values: std, bcp, info, exp, and historic
     ipr values: full3667, noModification3667, noDerivatives3667
     you can add the attributes updates="NNNN" and obsoletes="NNNN"
     they will automatically be output with "(if approved)" -->

  <!-- ***** FRONT MATTER ***** -->

  <front>
    <!-- The abbreviated title is used in the page header - it is only necessary if the
         full title is longer than 39 characters -->

    <title abbrev="uni-topo">A YANG Model for User-Network Interface (UNI)
    Topologies</title>

    <author fullname="Oscar Gonzalez de Dios" initials="O.G.D" role="editor"
            surname="Gonzalez de Dios">
      <organization>Telefonica</organization>

      <address>
        <postal>
          <street/>

          <!-- Reorder these if your country does things differently -->

          <city>Madrid</city>

          <region/>

          <code/>

          <country>ES</country>
        </postal>

        <phone/>

        <email>oscar.gonzalezdedios@telefonica.com</email>

        <!-- uri and facsimile elements may also be added -->
      </address>
    </author>

    <author fullname="Samier Barguil" initials="S.B." surname="Barguil">
      <organization>Telefonica</organization>

      <address>
        <postal>
          <street/>

          <!-- Reorder these if your country does things differently -->

          <city>Madrid</city>

          <region/>

          <code/>

          <country>ES</country>
        </postal>

        <phone/>

        <email>samier.barguilgiraldo.ext@telefonica.com</email>

        <!-- uri and facsimile elements may also be added -->
      </address>
    </author>

    <author fullname="Qin Wu" initials="Q." surname="Wu">
      <organization>Huawei</organization>

      <address>
        <postal>
          <street>101 Software Avenue, Yuhua District</street>

          <city>Nanjing</city>

          <region>Jiangsu</region>

          <code>210012</code>

          <country>China</country>
        </postal>

        <email>bill.wu@huawei.com</email>
      </address>
    </author>

    <author fullname="Mohamed Boucadair" initials="M.B." surname="Boucadair">
      <organization>Orange</organization>

      <address>
        <postal>
          <street/>

          <!-- Reorder these if your country does things differently -->

          <city>Caen</city>

          <region/>

          <code/>

          <country>France</country>
        </postal>

        <phone/>

        <email>mohamed.boucadair@orange.com</email>

        <!-- uri and facsimile elements may also be added -->
      </address>
    </author>

    <date day="2" month="April" year="2020"/>

    <!-- Meta-data Declarations -->

    <area>ops</area>

    <workgroup>OPSAWG</workgroup>

    <!-- WG name at the upperleft corner of the doc,
         IETF is fine for individual submissions.
         If this element is not present, the default is "Network Working Group",
         which is used by the RFC Editor as a nod to the history of the IETF. -->

    <keyword>uni-topology, topology, uni</keyword>

    <!-- Keywords will be incorporated into HTML output
         files in a meta tag but they have no effect on text or nroff
         output. If you submit your draft to the RFC Editor, the
         keywords will be used for the search engine. -->

    <abstract>
      <t>This document defines a YANG data model for representing an abstract
      view of the Service Provider network topology containing the points from
      which its services can be attached (e.g., basic connectivity, VPN,
      SDWAN). The data model augments the &acute;ietf-network&acute; data model by adding the concept
      of service-attachment-points. The service-attachment-points are an
      abstraction of the points to which network services (such as L3 VPN or
      L2 VPN) can be attached.</t>
    </abstract>
  </front>

  <middle>
    <section anchor="Introduction" title="Introduction">
      <t>The User-Network Interface (UNI) is an important architectural
      concept in many implementations and deployments of services such as VPNs
      or managed VoIP services.</t>

      <t>This document defines a YANG data model for representing, managing
      and controlling the User Network Interface (UNI) topology. The data
      model augments the &acute;ietf-network&acute; module <xref target="RFC8345"/> by adding
      the concept of service attachment points. The service attachment points
      are abstraction of the points where network services such as L3 VPNs or
      L2 VPNs can be attached.</t>

      <t>This document does not make any assumption about the service provided
      by the network to the users. VPN service is used for illustration
      purposes.</t>

      <t>In the context of Software-Defined Networking (SDN) <xref
      target="RFC7149"/> <xref target="RFC7426"/>, the defined YANG data model
      in this document can be used to exchange information between control
      elements, so as to support VPN service provision and resource management
      discussed in <xref target="I-D.ietf-opsawg-l3sm-l3nm"/>. Through this
      data model, the service orchestration layer can learn the capability and
      available endpoint(s) of interconnection resource of the underlying
      network. The service orchestration layer can determine which endpoint of
      interconnection to add to L2VPN or L3VPN service. With the help of other
      data models (e.g., L3SM model <xref target="RFC8299"/> and L3NM model) and
      mechanism, hierarchical control elements could determine the feasibility
      of an end-to-end path and to derive the sequence of domains and the
      points of interconnection to use.</t>

      <t>This document explains the scope and purpose of a uni topology model
      and its relation with the service models and describes how it can be used
      by a network operator. The document also shows how the topology and
      service models fit together.</t>

      <t>The YANG data model in this document conforms to the Network
      Management Datastore Architecture (NMDA) <xref target="RFC8342"/>.</t>

      <section anchor="terminology" title="Terminology">
        <t>This document assumes that the reader is familiar with the contents
        of <xref target="RFC6241"/>, <xref target="RFC7950"/> and <xref
        target="RFC8309"/>. The document uses terminologies from those documents.
		Tree diagrams used in this document follow the notation defined
		in <xref target="RFC8340"/>.</t>

        <t>This document uses the following terms:<list style="hanging">
            <t hangText="Service Provider (SP): ">The organization (usually a
            commercial undertaking) responsible for operating the network that
            offers a service (e.g. a VPN) to customers.</t>

            <t hangText="Customer Edge (CE): ">An equipment that is dedicated
            to a particular customer and is directly connected to one or more
            PE devices via attachment circuits. A CE is usually located at the
            customer premises, and is usually dedicated to a single service
            (e.g VPN), although it may support multiple VPNs if each one has
            separate attachment circuits. A CE device can be a router, bridge,
            switch, etc.</t>

            <t hangText="Provider Edge (PE):">An equipment owned and managed
            by the SP that can support multiple services (e.g. VPNs) for
            different customers, and is directly connected to one or more CE
            devices via attachment circuits. A PE is usually located at an SP
            point of presence (PoP).</t>

            <t hangText="Attachment point(AP):">Describe a service&acute;s end point
            characteristics and its reference to a Termination Point (TP) of
            the Provider Edge (PE) Node; used as service access point for VPN
            service, for example.</t>
          </list></t>
      </section>

      <section title="Requirements Language">
        <t>The key words "MUST", "MUST NOT", "REQUIRED", "SHALL", "SHALL NOT",
        "SHOULD", "SHOULD NOT", "RECOMMENDED", "NOT RECOMMENDED", "MAY", and
        "OPTIONAL" in this document are to be interpreted as described in BCP
        14 <xref target="RFC2119"/> <xref target="RFC8174"/> when, and only
        when, they appear in all capitals, as shown here.</t>
      </section>
    </section>

    <section anchor="use_case" title="UNI Topology Model Usage">
      <t>Management operations of a service provider network can be automated
      using a variety of means such as interfaces based on YANG modules.
      Considering the architecture depicted in <xref target="architecture"/>, the goal
      is to be able to show via a YANG-based interface an abstracted network
      view from the network controller to the service orchestration layer.</t>

      <figure align="center" anchor="architecture">
        <artwork align="center">
                +---------------+
                |   Customer    |
                +---------------+
Customer Service Models |
                        |
                +-----------------+
                |    Service      |
                |  Orchestration  |
                +-----------------+
Service Network Models | | UNI Topology Model
                       | |
                +-----------------+
                |     Network     |
                |   Controller    |
                +-------|----------+
                        |
+------------------------------------------------+
                      Network
            </artwork>
      </figure>

      <t>The service orchestration layer does not need to know about the
      internals of the network. Hence, the abstraction&acute;s need is to be
      able to get the set of nodes, and the attachment points associated with
      the nodes from which network services can be grafted (delivered). Let us consider
      the example of a typical Service Provider network (<xref
      target="sp_network"/>), with PE and P nodes. The Service orchestration
      layer would see a set of PEs, and a set of client-facing ports to which
      CEs can be connected (or are actually connected). Service orchestration
      layer will have also access to a set of Customer Service Model, e.g., a
      L3SM or L2SM data model in the customer-facing interface and a set of
      Network models, e.g., L3NM and Network topology data models. In this use
      case, it is assumed that the network controller is unaware of what
      happens beyond the PEs towards the CEs; it is only responsible for the
      management and control of the network between PEs.</t>

      <figure align="center" anchor="sp_network">
        <artwork align="center">
 *---|-|---*         *---|-|---*
-|   PE    |        -|   PE    |-
 *----|----*         *----|----*
            \       /
           *----|----*
           |    P    |
           *----|----*
            /        \
 *----|----*         *----|----*
-|   PE    |         |   PE    |-
 *---|-|---*         *-|-|-|-|-*
            </artwork>
      </figure>

      <t>How the abstracted view of the network controller can look like
	  is depicted in <xref target="uni_topology"/>.</t>

      <figure align="center" anchor="uni_topology">
        <artwork align="center">
 +---|-|---+         +---|-|---+
-|   PE    |---------|   PE    |-
 +----|----+         +----|----+
      |                   |
 +----|----+         +----|----+
-|   PE    |---------|   PE    |-
 +---|-|---+         +-|-|-|-|-+
            </artwork>
      </figure>
    </section>

    <section title="YANG Module Structure Details">
      <t>The abstract (base) network data model is defined in the
      &acute;ietf-network&acute; module of [RFC8345].</t>

      <t>The UNI-topology builds on the network data model defined in the
      &acute;ietf-network&acute; module <xref target="RFC8345"/>, augmenting the nodes
      with service-attachment points, which anchor the links and are contained
      in nodes. The structure of the &acute;ietf-uni-topology&acute; module is shown in
      <xref target="module_tree"/>.</t>

      <figure align="center" anchor="module_tree">
        <artwork align="left">module: ietf-uni-topology
  augment /nw:networks/nw:network/nw:node:
    +--rw service-attachment-point* [attachment-id]
       +--rw attachment-id         nt:tp-id
       +--rw type?                 identityref
       +--rw admin-status?         boolean
       +--rw oper-status?          boolean
       +--rw encapsulation-type?   string</artwork>
      </figure>
    </section>

    <section anchor="YANG_module" title="YANG module">
      <t>This module imports types from <xref target="RFC8343"/> and <xref
      target="RFC8345"/>.</t>

      <figure align="center" anchor="module_YANG">
        <artwork align="left">
&lt;CODE BEGINS&gt;  file "ietf-uni-topology@2020-04-02.yang"
module ietf-uni-topology {
  yang-version 1.1;
  namespace "urn:ietf:params:xml:ns:yang:ietf-uni-topology";
  prefix uni;

  import ietf-interfaces {
    prefix if;
    reference
      "RFC 8343: A YANG Data Model for Interface Management";
  }
  import ietf-network-topology {
    prefix nt;
    reference
      "Section 6.2 of RFC 8345: A YANG Data Model for Network 
        Topologies";
  }
  import ietf-network {
    prefix nw;
    reference
      "Section 6.1 of RFC 8345: A YANG Data Model for Network 
          Topologies";
  }

  organization
    "IETF OPSA (Operations and Management Area) Working Group ";
  contact
   "   Editor:    Oscar Gonzalez de Dios
                 &lt;mailto:oscar.gonzalezdedios@telefonica.com&gt;
       Editor:   Samier Barguil
                 &lt;mailto:alejandro.aguado_martin@nokia.com&gt;
       Editor:    Qin Wu
                 &lt;mailto:victor.lopezalvarez@telefonica.com&gt;
       Editor:   Mohamed Boucadair
                 &lt;mailto:daniel.voyer@bell.ca&gt;
   ";
  description
    "This YANG module defines a model for representing, managing
     and controlling the User Network Interface (UNI) topology.
     Copyright (c) 2020 IETF Trust and the persons identified as
     authors of the code.  All rights reserved.

     Redistribution and use in source and binary forms, with or
     without modification, is permitted pursuant to, and subject to
     the license terms contained in, the Simplified BSD License set
     forth in Section 4.c of the IETF Trust's Legal Provisions
     Relating to IETF Documents
     (https://trustee.ietf.org/license-info).

     This version of this YANG module is part of RFC XXXX
     (https://www.rfc-editor.org/info/rfcXXXX); see the RFC itself
     for full legal notices.";

  revision 2020-04-02 {
    description
      "Initial version";
    reference
      "RFC XXXX: A YANG Model for User-Network Interface (UNI)
                 Topologies";
  }

  grouping uni-information-group {
    description
      "User-Network Interface Information";
    list service-attachment-point {
      key "attachment-id";
      description
        "The service attachment points are abstraction of
         the points where network services such as L3 VPNs
         or L2 VPNs can be attached.";
      leaf attachment-id {
        type nt:tp-id;
        description
          "Name of the interface";
      }
      leaf type {
        type identityref {
          base if:interface-type;
        }
        config false;
        description
          "The type of the interface.";
        reference
          "RFC 8343: A YANG Data Model for Interface Management";
      }
      leaf admin-status {
        type boolean;
        description
          "Administrative Status UP/DOWN";
      }
      leaf oper-status {
        type boolean;
        description
          "Operational Status UP/DOWN";
      }
      leaf encapsulation-type {
        type string;
        description
          "Encapsulation type.  By default, the
           encapsulation type is set to 'untagged'.";
      }
    }
  }

  augment "/nw:networks/nw:network/nw:network-types" {
    description
      "Introduces new network type for UNI Unicast topology";
    container uni-topology {
      presence "indicates UNI Unicast topology";
      description
        "The presence of the container node indicates UNI
         topology";
    }
  }

  augment "/nw:networks/nw:network/nw:node" {
    description
      "Parameters for the service edge point level.";
    uses uni-information-group;
  }
}
&lt;CODE ENDS&gt;</artwork>
      </figure>
    </section>

    <!-- Possibly a 'Contributors' section ... -->

    <section anchor="IANA" title="IANA Considerations">
      <t>This document registers the following namespace URI in the "ns" subregistry
	  within the "IETF XML Registry" <xref target="RFC3688"/>:</t>

      <t><figure>
          <artwork>   --------------------------------------------------------------------
   URI: urn:ietf:params:xml:ns:yang:ietf-uni-topology
   Registrant Contact: The IESG.
   XML: N/A, the requested URI is an XML namespace.
   --------------------------------------------------------------------</artwork>
        </figure></t>

      <t>This document registers the following YANG module in the YANG Module
      Names registry <xref target="RFC6020"/> within the "YANG Parameters" registry:<figure>
          <artwork>   --------------------------------------------------------------------
   name:         ietf-uni-topology
   namespace:    urn:ietf:params:xml:ns:yang:ietf-uni-topology
   maintained by IANA: N
   prefix:       uni
   reference:    RFC XXXX
   --------------------------------------------------------------------</artwork>
        </figure></t>
    </section>

    <section anchor="Security" title="Security Considerations">
      <t>The YANG module specified in this document defines a schema for data
      that is designed to be accessed via network management protocols such as
      NETCONF <xref target="RFC6241"/> or RESTCONF <xref target="RFC8040"/>.
	  The lowest NETCONF layer is the
      secure transport layer, and the mandatory-to-implement secure transport
      is Secure Shell (SSH) <xref target="RFC6242"/>. The lowest RESTCONF layer is HTTPS, and
      the mandatory-to-implement secure transport is TLS <xref target="RFC8446"/>.</t>

      <t>The Configuration Access Control Model (NACM) <xref target="RFC8341"/> provides the means to
      restrict access for particular NETCONF or RESTCONF users to a
      preconfigured subset of all available NETCONF or RESTCONF protocol
      operations and content.</t>

      <t>There are a number of data nodes defined in this YANG module that are
      writable/creatable/deletable (i.e., config true, which is the default).
      These data nodes may be considered sensitive or vulnerable in some
      network environments. Write operations (e.g., edit-config) to these data
      nodes without proper protection can have a negative effect on network
      operations. These are the subtrees and data nodes and their
      sensitivity/vulnerability:<list style="symbols">
          <t>/nw:networks/nw:network/nw:node/uni:service-attachment-point/uni:attachment-id<vspace
          blankLines="1"/>This subtree specifies the configurations of the
          nodes in a UNI network topology. Unexpected changes to this subtree
          could lead to service disruption and/or network misbehavior.</t>
        </list></t>

      <t>Some of the readable data nodes in this YANG module may be considered
      sensitive or vulnerable in some network environments. It is thus
      important to control read access (e.g., via get, get-config, or
      notification) to these data nodes. These are the subtrees and data nodes
      and their sensitivity/vulnerability:<list style="symbols">
          <t>/nw:networks/nw:network/nw:node/uni:service-attachment-point<vspace
          blankLines="1"/>Unauthorized access to this subtree can disclose the
          operational state information of the nodes in a UNI topology.</t>
        </list></t>

      <t/>
    </section>

    <section anchor="Implementation" title="Implementation Status">
      <t>This section will be used to track the status of the implementations
      of the model. It is aimed at being removed if the document becomes
      RFC.</t>
    </section>

    <section anchor="Acknowledgements" title="Acknowledgements">
      <t>Thanks to Adrian Farrell and Daniel King for the suggestions on the
      names.</t>
    </section>
  </middle>

  <!--  *****BACK MATTER ***** -->

  <back>
    <!-- References split into informative and normative -->

    <!-- There are 2 ways to insert reference entries from the citation libraries:
     1. define an ENTITY at the top, and use "ampersand character"RFC2629; here (as shown)
     2. simply use a PI "less than character"?rfc include="reference.RFC.2119.xml"?> here
        (for I-Ds: include="reference.I-D.narten-iana-considerations-rfc2434bis.xml")

     Both are cited textually in the same manner: by using xref elements.
     If you use the PI option, xml2rfc will, by default, try to find included files in the same
     directory as the including file. You can also define the XML_LIBRARY environment variable
     with a value containing a set of directories to search.  These can be either in the local
     filing system or remote ones accessed by http (http://domain/dir/... ).-->

    <references title="Normative References">
      <!--?rfc include="http://xml.resource.org/public/rfc/bibxml/reference.RFC.2119.xml"?-->

      &RFC2119;
	  
	  &RFC3688;
	  
	  &RFC6020;

      &RFC6241;
	  
	  &RFC6242;

      &RFC7950;
	  
	  &RFC8040;

      &RFC8174;
	  
	  &RFC8341;

      &RFC8345;
	  
	  &RFC8446;
    </references>

    <references title="Informative References">
      <!-- Here we use entities that we defined at the beginning. -->

       &RFC7149;
	   
	  &RFC8299;

      &RFC8309;

     &RFC8342;

      &RFC7426;
	  
	   &RFC8340;

      &RFC8343;

      &I-D.ietf-opsawg-l3sm-l3nm;

      <!-- A reference written by by an organization not a person. -->
    </references>

    <!-- Change Log
v00a 2019-11-04  Authors   Initial version
 -->
  </back>
</rfc>
